<Grid x:Class="IndoorMapTools.View.ManageImageForm"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:uc="clr-namespace:IndoorMapTools.View.UserControls"
      xmlns:vm="clr-namespace:IndoorMapTools.ViewModel"
      xmlns:cvt="clr-namespace:IndoorMapTools.Helper"
      xmlns:ec="clr-namespace:EnhancedCommands.System.Windows.Input;assembly=EnhancedCommands"
      mc:Ignorable="d" Margin="5"
      d:DataContext="{d:DesignInstance Type=vm:Floor}"
      d:Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}">
    
    <Grid.RowDefinitions>
        <RowDefinition Height="80"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="80"/>
        <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="80"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="80"/>
    </Grid.ColumnDefinitions>

    <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Border x:Name="outerBorder" BorderThickness="1"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
            <uc:ImageManageCanvas x:Name="imageCanvas" TargetSize="500,500"
                                  LeftPad="{Binding Value, ElementName=textLeftPad}"
                                  RightPad="{Binding Value, ElementName=textRightPad}"
                                  TopPad="{Binding Value, ElementName=textTopPad}"
                                  BottomPad="{Binding Value, ElementName=textBottomPad}"
                                  OriginalSource="{Binding MapImage}"/>
        </Border>
        
        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center"
                    IsEnabled="False" IsHitTestVisible="False"
                    Visibility="{Binding AlternativeSource, ElementName=imageCanvas, 
                        Converter={cvt:NonNullityToVisibility}}">
            <StackPanel.Effect>
                <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="5"/>
            </StackPanel.Effect>
            <TextBlock TextAlignment="Center" Text="{DynamicResource strings.AlternateImageDescLine1}"/>
            <TextBlock TextAlignment="Center" Text="{DynamicResource strings.AlternateImageDescLine2}"/>
        </StackPanel>

        <ToggleButton Content="{DynamicResource strings.RemoveAlternativeImage}" 
                      VerticalAlignment="Center" HorizontalAlignment="Center"
                      IsChecked="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:IsNull}}"
                      Visibility="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:NullityToVisibility}}"/>
    </Grid>

    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                IsEnabled="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:IsNull}}">
        <TextBlock TextWrapping="Wrap" Text="{DynamicResource strings.TopPad}"/>
        <uc:EditableText x:Name="textTopPad" HorizontalAlignment="Center" 
                         Value="0" PostfixText=" px"
                         VisualType="HyperText" Validator="Int"/>
    </StackPanel>
    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                IsEnabled="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:IsNull}}">
        <TextBlock TextWrapping="Wrap" Text="{DynamicResource strings.BottomPad}"/>
        <uc:EditableText x:Name="textBottomPad" HorizontalAlignment="Center" 
                         Value="0" PostfixText=" px"
                         VisualType="HyperText" Validator="Int"/>
    </StackPanel>
    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                IsEnabled="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:IsNull}}">
        <TextBlock TextWrapping="Wrap" Text="{DynamicResource strings.LeftPad}"/>
        <uc:EditableText x:Name="textLeftPad" HorizontalAlignment="Center" 
                         Value="0" PostfixText=" px"
                         VisualType="HyperText" Validator="Int"/>
    </StackPanel>
    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="2"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                IsEnabled="{Binding AlternativeSource, ElementName=imageCanvas, Converter={cvt:IsNull}}">
        <TextBlock TextWrapping="Wrap" Text="{DynamicResource strings.RightPad}"/>
        <uc:EditableText x:Name="textRightPad" HorizontalAlignment="Center" 
                         Value="0" PostfixText=" px"
                         VisualType="HyperText" Validator="Int"/>
    </StackPanel>

    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="3"
                HorizontalAlignment="Left" VerticalAlignment="Center">
        <TextBlock Text="{DynamicResource strings.ImageDimension}" Margin="10,0,0,0"/>
        <TextBlock Text=" (px) : "/>
        <TextBlock Text="{Binding MapImage.PixelWidth}"/>
        <TextBlock Text="×"/>
        <TextBlock Text="{Binding MapImage.PixelHeight}"/>
        <TextBlock Text=" → "/>
        <TextBlock Text="{Binding Width, ElementName=imageCanvas}"/>
        <TextBlock Text="×"/>
        <TextBlock Text="{Binding Height, ElementName=imageCanvas}"/>
    </StackPanel>

    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" 
                Grid.Row="3" Grid.ColumnSpan="3">
        <uc:OKButton Content="{DynamicResource strings.OK}" CommandParameter="{Binding}">
            <uc:OKButton.Command>
                <ec:SerialCommand Command1="{Binding CropPadMapImageCommand}"
                                  CommandParameter2="{Binding AlternativeSource,
                                    Source={x:Reference imageCanvas}}">
                    <ec:SerialCommand.CommandParameter1>
                        <MultiBinding Converter="{cvt:ThicknessConverter}">
                            <Binding Path="Value" Source="{x:Reference textLeftPad}"/>
                            <Binding Path="Value" Source="{x:Reference textTopPad}"/>
                            <Binding Path="Value" Source="{x:Reference textRightPad}"/>
                            <Binding Path="Value" Source="{x:Reference textBottomPad}"/>
                        </MultiBinding>
                    </ec:SerialCommand.CommandParameter1>
                    <ec:SerialCommand.Command2>
                        <ec:SetPropertyCommand TargetProperty="{Binding MapImage}" 
                                    Value="{Binding AlternativeSource, Source={x:Reference imageCanvas}}"/>
                    </ec:SerialCommand.Command2>
                </ec:SerialCommand>
            </uc:OKButton.Command>
        </uc:OKButton>
        <uc:CancelButton Content="{DynamicResource strings.Cancel}"/>
    </StackPanel>
</Grid>
